/*Given three integer arrays arr1, arr2 and arr3 sorted in strictly increasing order, 
return a sorted array of only the integers that appeared in all three arrays in increasing order

For any other Boundary Conditions Print -1 
Assume all the three input array contains positive elements 

The first line of input contains the first array elements followed by second array elements followed by third array elements 

input =
1 2 3 4 5 11 15
1 2 5 7 
1 3 4 5 8 20 45 55
output = 
1 5

Explanation: Only 1 and 5 appeared in the three arrays.


input = 
3 4 4 5 6 7
40 50 60 70 80 90
500 600
output = -1


input = 
1 1 1 2
1 1 
1 2 3 4 5
output = 1

*/



import java.util.*;
public class Intersection
{
	public static void main(String args[])
	{
		Scanner sc=new Scanner(System.in);
		String a[]=sc.nextLine().split(" ");
		String b[]=sc.nextLine().split(" ");
		String c[]=sc.nextLine().split(" ");
		Integer x[]=new Integer[a.length];
		Integer y[]=new Integer[b.length];
		Integer z[]=new Integer[c.length];
		for(int i=0;i<a.length;i++){
			x[i]=Integer.parseInt(a[i]);
		}
		for(int i=0;i<b.length;i++){
			y[i]=Integer.parseInt(b[i]);
		}
		for(int i=0;i<c.length;i++){
			z[i]=Integer.parseInt(c[i]);
		}
		HashSet<Integer> set=new HashSet<Integer>();
		set.addAll(Arrays.asList(x));
		set.retainAll(Arrays.asList(y));
		set.retainAll(Arrays.asList(z));
		ArrayList<Integer> l=new ArrayList<Integer>(set);
		if(l.isEmpty()){
		    System.out.println(-1);
		}
		else{
    		for(int i=0;i<l.size();i++){
    		    if(i!=l.size()-1)
    			    System.out.print(l.get(i)+" ");
    			else
    			    System.out.print(l.get(i));
    		}
		}
	}
}